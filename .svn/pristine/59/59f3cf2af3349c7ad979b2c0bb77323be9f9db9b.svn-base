package com.itexpertnepal.simpleinvoice.domain;

import com.itexpertnepal.simpleinvoice.domain.common.AbstractEntity;
import java.io.Serializable;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 *
 * @author binay
 */
@Entity
@Table(name = "invoice_details")
public class InvoiceDetails extends AbstractEntity implements Serializable {

    private double quantity;
    private String productCode;
    private String productName;
    private Long defaultTax;
    private double unitPrice;
    private Invoice invoice;

    public InvoiceDetails() {
    }

    public InvoiceDetails(int quantity, String productCode, double unitPrice, Invoice invoice) {

        this.quantity = quantity;
        this.productCode = productCode;
        this.unitPrice = unitPrice;
        this.invoice = invoice;
    }

    @Column(name = "quantity")
    public double getQuantity() {
        return quantity;
    }

    public void setQuantity(double quantity) {
        this.quantity = quantity;
    }

    @Column(name = "product_code")
    public String getProductCode() {
        return productCode;
    }

    public void setProductCode(String productCode) {
        this.productCode = productCode;
    }

    @Column(name = "product_name")
    public String getProductName() {
        return productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }

    @Column(name = "default_tax")
    public Long getDefaultTax() {
        return defaultTax;
    }

    public void setDefaultTax(Long defaultTax) {
        this.defaultTax = defaultTax;
    }

    @Column(name = "unit_price")
    public double getUnitPrice() {
        return unitPrice;
    }

    public void setUnitPrice(double unitPrice) {
        this.unitPrice = unitPrice;
    }

    @ManyToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "invoice_id")
    public Invoice getInvoice() {
        return invoice;
    }

    public void setInvoice(Invoice invoice) {
        this.invoice = invoice;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 53 * hash + (this.productCode != null ? this.productCode.hashCode() : 0);
        hash = 53 * hash + (this.defaultTax != null ? this.defaultTax.hashCode() : 0);
        hash = 53 * hash + (int) (Double.doubleToLongBits(this.unitPrice) ^ (Double.doubleToLongBits(this.unitPrice) >>> 32));
        hash = 53 * hash + (this.invoice != null ? this.invoice.hashCode() : 0);
        hash = 53 * hash + (this.getId() != null ? this.getId().hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final InvoiceDetails other = (InvoiceDetails) obj;
        if (this.quantity != other.quantity) {
            return false;
        }
        if ((this.productCode == null) ? (other.productCode != null) : !this.productCode.equals(other.productCode)) {
            return false;
        }
        if ((this.defaultTax == null) ? (other.defaultTax != null) : !this.defaultTax.equals(other.defaultTax)) {
            return false;
        }
        if (Double.doubleToLongBits(this.unitPrice) != Double.doubleToLongBits(other.unitPrice)) {
            return false;
        }
        if (this.invoice != other.invoice && (this.invoice == null || !this.invoice.equals(other.invoice))) {
            return false;
        }
        if (this.getId() != other.getId() && (this.getId() == null || !this.getId().equals(other.getId()))) {
            return false;
        }
        return true;
    }

}
